buildscript {
    ext {
        kotlin_version = '1.2.21'
        junit_version = '4.12'
        metanalysis_version = '0.2.3'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    group 'org.metanalysis'
    version '0.1.0'

    apply plugin: 'kotlin'
    apply plugin: 'jacoco'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.jvmTarget = '1.8'
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

        testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testImplementation "junit:junit:$junit_version"
    }

    jar {
        from rootProject.file('LICENSE')
        from rootProject.file('NOTICE')
    }

    jacocoTestReport {
        dependsOn test

        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

subprojects {
    apply plugin: 'java-library'
}

apply plugin: 'application'

mainClassName = 'org.metanalysis.srb.MainKt'

dependencies {
    implementation project(':metanalysis-srb-core')
    runtimeOnly project(':metanalysis-srb-java')
}

task codeCoverageReport(type: JacocoReport) {
    dependsOn {
        allprojects*.jacocoTestReport
    }

    executionData fileTree(project.rootDir.absolutePath)
            .include("**/build/jacoco/*.exec")

    allprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}
